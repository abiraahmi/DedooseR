[{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":"Copyright 2025 [Abiraahmi Shankar]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":[]},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://abiraahmi.github.io/DedooseR/articles/Cooccurence.html","id":"generate-a-count-matrix-and-network","dir":"Articles","previous_headings":"","what":"2. Generate a count matrix and network","title":"4. Cooccurence","text":"default cooccur() returns formatted HTML table, easy inspection request tibble keep moderately inclusive edge threshold plot.  Codes academic skills, emotional growth, self-esteem form dense cluster - unsurprising given often appear together across 20 media titles. proportion table can see, example, emotional growth appears 80% transcripts self-esteem coded, externalizing behavior rarely co-occurs academic skills.","code":"cooccur_counts <- cooccur(   excerpts = data,   scale = \"count\",   output = \"tibble\",   plot = TRUE,   edge_min = 8,   use_labels = TRUE,   codebook = codebook )  cooccur_counts$matrix #> # A tibble: 10 × 11 #>    code    `motor skills` `social skills` `self-expression` `inhibitory control` #>    <chr>            <dbl>           <dbl>             <dbl>                <dbl> #>  1 motor …              5               2                 2                    4 #>  2 social…              2              10                 3                    5 #>  3 self-e…              2               3                 9                    4 #>  4 inhibi…              4               5                 4                   10 #>  5 intern…              2               4                 5                    5 #>  6 extern…              0               4                 1                    2 #>  7 academ…              5              10                 9                   10 #>  8 self-e…              4               8                 7                    7 #>  9 growth…              4               6                 7                    8 #> 10 Emotio…              3               7                 5                    9 #> # ℹ 6 more variables: `internalizing behavior` <dbl>, #> #   `externalizing behavior` <dbl>, `academic skills` <dbl>, #> #   `self-esteem` <dbl>, `growth mindset` <dbl>, #> #   `Emotional growth: identification and/or regulation` <dbl> cooccur_counts$plot"},{"path":"https://abiraahmi.github.io/DedooseR/articles/Intro_to_DedooseR.html","id":"clean-excerpts-with-clean_data","dir":"Articles","previous_headings":"","what":"1. Clean excerpts with clean_data()","title":"1. Cleaning, Merging, and Exploring Qualitative Data","text":"clean_data() function standardizes column names, keeps highest ranked coder per transcript, drops range/weight columns, prefixes code variables c_, returns cleaned data codebook. Supply mock data along preferred coder order. single-coded transcripts, can simply list coders . can optionally rename relabel variables time. Bonus: function also produces codebook, allows get overview data confirm variable labels types moving .","code":"# Define your preferred coders ---------------------------------- preferred_coders <- c(\"Aliyah\", \"Rohan\", \"Lina\", \"Mateo\", \"Priya\", \"Jordan\")  # Run the function ----------------------------------  cleaned <- clean_data(   excerpts = demo_excerpts,   preferred_coders = preferred_coders,   rename_vars = list(resource_author = \"resource_creator\"),   relabel_vars = list(     media_title = \"Interview or focus group title\",     resource_author = \"Team member who uploaded to Dedoose\"   ) )  # Take a peeksie! ---------------------------------- cleaned$data #> # A tibble: 20 × 19 #>    media_title              excerpt_creator excerpt_date excerpt resource_author #>    <chr>                    <chr>           <date>       <chr>   <chr>           #>  1 Interview: Opening Circ… Aliyah          2023-06-10   Keepin… Camp Director   #>  2 Focus Group: Rhythm Rel… Rohan           2023-07-18   During… Evaluation Lead #>  3 Interview: Alumni Showc… Aliyah          2024-01-08   When I… Alumni Coordin… #>  4 Classroom Observation: … Lina            2023-07-24   In lyr… Program Resear… #>  5 Journal Club: Campfire … Mateo           2023-08-05   During… School Liaison  #>  6 Parent Interview: Pract… Priya           2023-08-12   On pra… Behavior Speci… #>  7 Coach Debrief: Studio S… Lina            2023-08-19   During… Camp Director   #>  8 Interview: Teen Beat Ma… Rohan           2023-08-26   The te… Program Resear… #>  9 Workshop: Beat Mapping   Aliyah          2023-09-02   Aliyah… Counselor Team… #> 10 Focus Group: Mentor Cir… Mateo           2023-09-09   In men… Behavior Speci… #> 11 Observation: Homework J… Priya           2023-09-16   During… Evaluation Lead #> 12 Interview: Closing Show… Jordan          2023-09-23   At the… School Liaison  #> 13 Survey Comment: Quiet C… Aliyah          2023-09-30   While … Camp Director   #> 14 Survey Comment: Confide… Rohan           2023-10-07   Rohan … Behavior Speci… #> 15 Interview: Leadership H… Jordan          2023-10-14   In lea… Program Resear… #> 16 Observation: Peer Pairi… Priya           2023-10-21   During… Counselor Team… #> 17 Focus Group: Reflection… Lina            2023-10-28   Reflec… Evaluation Lead #> 18 Interview: New Camper    Mateo           2023-11-04   The ne… Camp Director   #> 19 Observation: Goal Setti… Jordan          2023-11-11   Goal s… Program Resear… #> 20 Workshop: Improvisation… Priya           2023-11-18   In imp… Counselor Team… #> # ℹ 14 more variables: resource_date <date>, codes_applied_combined <chr>, #> #   c_motor_skills <lgl>, c_social_skills <lgl>, c_self_expression <lgl>, #> #   c_emotional_regulation <lgl>, c_emotion_identification <lgl>, #> #   c_inhibitory_control <lgl>, c_internalizing_behavior <lgl>, #> #   c_externalizing_behavior <lgl>, c_academic_skills <lgl>, #> #   c_self_esteem <lgl>, c_growth_mindset <lgl>, coder_rank <int> cleaned$codebook #>                                          variable #> media_title                           media_title #> excerpt_creator                   excerpt_creator #> excerpt_date                         excerpt_date #> excerpt                                   excerpt #> resource_author                   resource_author #> resource_date                       resource_date #> codes_applied_combined     codes_applied_combined #> c_motor_skills                     c_motor_skills #> c_social_skills                   c_social_skills #> c_self_expression               c_self_expression #> c_emotional_regulation     c_emotional_regulation #> c_emotion_identification c_emotion_identification #> c_inhibitory_control         c_inhibitory_control #> c_internalizing_behavior c_internalizing_behavior #> c_externalizing_behavior c_externalizing_behavior #> c_academic_skills               c_academic_skills #> c_self_esteem                       c_self_esteem #> c_growth_mindset                 c_growth_mindset #> coder_rank                             coder_rank #>                                                                        label #> media_title                                   Interview or focus group title #> excerpt_creator                                coder who created the excerpt #> excerpt_date                                        date excerpt was created #> excerpt                                                 full text of excerpt #> resource_author                          Team member who uploaded to Dedoose #> resource_date                     date media/transcript was added to Dedoose #> codes_applied_combined                          all codes applied to excerpt #> c_motor_skills                                                  motor skills #> c_social_skills                                                social skills #> c_self_expression                                            self-expression #> c_emotional_regulation                                  emotional regulation #> c_emotion_identification                              emotion identification #> c_inhibitory_control                                      inhibitory control #> c_internalizing_behavior                              internalizing behavior #> c_externalizing_behavior                              externalizing behavior #> c_academic_skills                                            academic skills #> c_self_esteem                                                    self-esteem #> c_growth_mindset                                              growth mindset #> coder_rank               rank of coder, according to listed coder preference #>                               type #> media_title              character #> excerpt_creator          character #> excerpt_date                  Date #> excerpt                  character #> resource_author          character #> resource_date                 Date #> codes_applied_combined   character #> c_motor_skills             logical #> c_social_skills            logical #> c_self_expression          logical #> c_emotional_regulation     logical #> c_emotion_identification   logical #> c_inhibitory_control       logical #> c_internalizing_behavior   logical #> c_externalizing_behavior   logical #> c_academic_skills          logical #> c_self_esteem              logical #> c_growth_mindset           logical #> coder_rank                 integer"},{"path":"https://abiraahmi.github.io/DedooseR/articles/Intro_to_DedooseR.html","id":"recode-related-codes-with-recode","dir":"Articles","previous_headings":"","what":"2. Recode related codes with recode()","title":"1. Cleaning, Merging, and Exploring Qualitative Data","text":"Qualitative analysis often requires lot code iteration. begin journey research interests mind, alongside openness else may emerge. understand data better, begin see patterns ideas often decide tease apart collapse codes. recode() function combines selected codes single logical column updates codebook. , two emotion-focused codes collapsed one composite remaining themes stay -. similar fashion, can tease apart codes. two objects—recoded$data_recode recoded$codebook_recode—ones carry follow-vignette summarizing codes. Knit article first easy reuse.","code":"recoded <- DedooseR::recode(   data = cleaned$data,   recodes = list(     c_emotional_growth = c(       \"c_emotional_regulation\",       \"c_emotion_identification\"     )   ),   relabel_vars = list(     c_emotional_growth = \"emotional growth: identification and/or regulation\"   ) )  recoded$data_recode #> # A tibble: 20 × 18 #>    media_title              excerpt_creator excerpt_date excerpt resource_author #>    <chr>                    <chr>           <date>       <chr>   <chr>           #>  1 Interview: Opening Circ… Aliyah          2023-06-10   Keepin… Camp Director   #>  2 Focus Group: Rhythm Rel… Rohan           2023-07-18   During… Evaluation Lead #>  3 Interview: Alumni Showc… Aliyah          2024-01-08   When I… Alumni Coordin… #>  4 Classroom Observation: … Lina            2023-07-24   In lyr… Program Resear… #>  5 Journal Club: Campfire … Mateo           2023-08-05   During… School Liaison  #>  6 Parent Interview: Pract… Priya           2023-08-12   On pra… Behavior Speci… #>  7 Coach Debrief: Studio S… Lina            2023-08-19   During… Camp Director   #>  8 Interview: Teen Beat Ma… Rohan           2023-08-26   The te… Program Resear… #>  9 Workshop: Beat Mapping   Aliyah          2023-09-02   Aliyah… Counselor Team… #> 10 Focus Group: Mentor Cir… Mateo           2023-09-09   In men… Behavior Speci… #> 11 Observation: Homework J… Priya           2023-09-16   During… Evaluation Lead #> 12 Interview: Closing Show… Jordan          2023-09-23   At the… School Liaison  #> 13 Survey Comment: Quiet C… Aliyah          2023-09-30   While … Camp Director   #> 14 Survey Comment: Confide… Rohan           2023-10-07   Rohan … Behavior Speci… #> 15 Interview: Leadership H… Jordan          2023-10-14   In lea… Program Resear… #> 16 Observation: Peer Pairi… Priya           2023-10-21   During… Counselor Team… #> 17 Focus Group: Reflection… Lina            2023-10-28   Reflec… Evaluation Lead #> 18 Interview: New Camper    Mateo           2023-11-04   The ne… Camp Director   #> 19 Observation: Goal Setti… Jordan          2023-11-11   Goal s… Program Resear… #> 20 Workshop: Improvisation… Priya           2023-11-18   In imp… Counselor Team… #> # ℹ 13 more variables: resource_date <date>, codes_applied_combined <chr>, #> #   c_motor_skills <lgl>, c_social_skills <lgl>, c_self_expression <lgl>, #> #   c_inhibitory_control <lgl>, c_internalizing_behavior <lgl>, #> #   c_externalizing_behavior <lgl>, c_academic_skills <lgl>, #> #   c_self_esteem <lgl>, c_growth_mindset <lgl>, coder_rank <int>, #> #   c_emotional_growth <lgl> recoded$codebook_recode #>                                          variable #> media_title                           media_title #> excerpt_creator                   excerpt_creator #> excerpt_date                         excerpt_date #> excerpt                                   excerpt #> resource_author                   resource_author #> resource_date                       resource_date #> codes_applied_combined     codes_applied_combined #> c_motor_skills                     c_motor_skills #> c_social_skills                   c_social_skills #> c_self_expression               c_self_expression #> c_inhibitory_control         c_inhibitory_control #> c_internalizing_behavior c_internalizing_behavior #> c_externalizing_behavior c_externalizing_behavior #> c_academic_skills               c_academic_skills #> c_self_esteem                       c_self_esteem #> c_growth_mindset                 c_growth_mindset #> coder_rank                             coder_rank #> c_emotional_growth             c_emotional_growth #>                                                                        label #> media_title                                   Interview or focus group title #> excerpt_creator                                coder who created the excerpt #> excerpt_date                                        date excerpt was created #> excerpt                                                 full text of excerpt #> resource_author                          Team member who uploaded to Dedoose #> resource_date                     date media/transcript was added to Dedoose #> codes_applied_combined                          all codes applied to excerpt #> c_motor_skills                                                  motor skills #> c_social_skills                                                social skills #> c_self_expression                                            self-expression #> c_inhibitory_control                                      inhibitory control #> c_internalizing_behavior                              internalizing behavior #> c_externalizing_behavior                              externalizing behavior #> c_academic_skills                                            academic skills #> c_self_esteem                                                    self-esteem #> c_growth_mindset                                              growth mindset #> coder_rank               rank of coder, according to listed coder preference #> c_emotional_growth        emotional growth: identification and/or regulation #>                               type #> media_title              character #> excerpt_creator          character #> excerpt_date                  Date #> excerpt                  character #> resource_author          character #> resource_date                 Date #> codes_applied_combined   character #> c_motor_skills             logical #> c_social_skills            logical #> c_self_expression          logical #> c_inhibitory_control       logical #> c_internalizing_behavior   logical #> c_externalizing_behavior   logical #> c_academic_skills          logical #> c_self_esteem              logical #> c_growth_mindset           logical #> coder_rank                 integer #> c_emotional_growth         logical"},{"path":"https://abiraahmi.github.io/DedooseR/articles/Intro_to_DedooseR.html","id":"explore-excerpts-with-view_excerpts","dir":"Articles","previous_headings":"","what":"3. Explore excerpts with view_excerpts()","title":"1. Cleaning, Merging, and Exploring Qualitative Data","text":"Finally, review excerpts behind code. view_excerpts() opens interactive table powered DT, letting filter code search within text. TLDR: Start clean_data() standardize variable names labels, recode variables iterate codebook, lean view_excerpts() whenever want review excerpts code stories behind summaries. learn create code summaries visualize , continue Summarizing Codes tutorial!","code":"view_excerpts(recoded$data_recode) if (requireNamespace(\"DT\", quietly = TRUE)) {   view_excerpts(recoded$data_recode) } else {   message(\"Install the DT package to launch the interactive excerpt browser.\") }"},{"path":"https://abiraahmi.github.io/DedooseR/articles/Summarizing_Codes.html","id":"cook-up-a-word-cloud-with-wordcloud","dir":"Articles","previous_headings":"","what":"2. Cook up a word cloud with wordcloud()","title":"2. Summarizing Codes","text":"Sometimes want sense vocabulary surfaces within code. wordcloud() filters excerpts selected code, removes common stop words, renders result wordcloud2. wordcloud2 depends HTML widgets, chunk runs package installed. can also pass custom_stopwords drop project-specific terms.","code":"# Word cloud for the emotional-growth composite code ------------------------- if (requireNamespace(\"wordcloud2\", quietly = TRUE)) {   wordcloud(     data = data,     code = \"c_emotional_growth\",     max_words = 60,     custom_stopwords = c(\"camp\", \"kids\", \"jace\")   ) } else {   message(\"Install the wordcloud2 package to render the word cloud.\") }"},{"path":"https://abiraahmi.github.io/DedooseR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Abiraahmi Shankar. Author, maintainer. Catalina Cañizares. Author. Francisco Cardozo. Author. Pamela Morris-Perez. Author.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shankar , Cañizares C, Cardozo F, Morris-Perez P (2025). DedooseR: DedooseR Qualitative data monitoring & analysis. R package version 0.0.6, https://abiraahmi.github.io/DedooseR.","code":"@Manual{,   title = {DedooseR: DedooseR for Qualitative data monitoring & analysis},   author = {Abiraahmi Shankar and Catalina Cañizares and Francisco Cardozo and Pamela Morris-Perez},   year = {2025},   note = {R package version 0.0.6},   url = {https://abiraahmi.github.io/DedooseR}, }"},{"path":"https://abiraahmi.github.io/DedooseR/index.html","id":"dedooser","dir":"","previous_headings":"","what":"DedooseR for Qualitative data monitoring & analysis","title":"DedooseR for Qualitative data monitoring & analysis","text":"DedooseR R package connects Dedoose support analysis qualitative data. built help researchers streamline workflows, explore qualitative data flexibly, conduct qualitative coding analysis rigor.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key Features","title":"DedooseR for Qualitative data monitoring & analysis","text":"DedooseR currently 8 key functions allow : clean_data: standardizes column names, keeps highest ranked coder per transcript, drops range/weight columns, prefixes code variables c_, returns cleaned data codebook. recode: combines selected codes single logical column updates codebook view_excerpts: create interactive, filterable datatable view excerpts behind code wordcloud: filters excerpts selected code, removes common stop words, renders result beautiful word cloud create_code_summary summarize code counts proportion transcripts/media objects come , set min count proportion summary output plot counts, proportions ! set_saturation: uses output create_code_summary filter visualiz codes meet minimum appearance targets compare_saturation: builds summary table check multiple threshold sets - useful want strict bar versus liberal bar. can also plot different bars ! cooccurence: helps see codes travel together within transcript media title, building matrix network plot","code":""},{"path":"https://abiraahmi.github.io/DedooseR/index.html","id":"why-this-package","dir":"","previous_headings":"","what":"Why This Package?","title":"DedooseR for Qualitative data monitoring & analysis","text":"Ongoing challenges qualitative research include defining constitutes high-quality data demonstrating transparency saturation reached (Small & Calarco, 2022). Informed guidelines high-quality qualitative research (Hennink & Kaiser, 2022), DedooseR allows better understand data quality tags Dedoose like: concreteness excerpts (priority code) heterogeneity within codes (heterogeneity code) tagging indicators Dedoose exploring R, allows gain greater confidence depth diversity datasets.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"DedooseR for Qualitative data monitoring & analysis","text":"can install development version DedooseR GitHub :","code":"# install.packages(\"pak\") pak::pak(\"abiraahmi/DedooseR\")"},{"path":"https://abiraahmi.github.io/DedooseR/index.html","id":"how-do-i-use-the-package","dir":"","previous_headings":"","what":"How do I use the package?","title":"DedooseR for Qualitative data monitoring & analysis","text":"vignettes walk use functions, cleaning recoding viewing excerpts assessing saturation creating code co-occurence network maps, check !","code":""},{"path":"https://abiraahmi.github.io/DedooseR/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"DedooseR for Qualitative data monitoring & analysis","text":"Hennink, M., & Kaiser, B. N. (2022). Sample sizes saturation qualitative research: systematic review empirical tests. Social science & medicine, 292, 114523. Small, M. L., & Calarco, J. M. (2022). Qualitative Literacy: Guide Evaluating Ethnographic Interview Research (1st ed.). University California Press. https://doi.org/10.2307/j.ctv2vr9c4x","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and prepare qualitative excerpts for export — clean_data","title":"Clean and prepare qualitative excerpts for export — clean_data","text":"function standardizes cleans dataset qualitative excerpts coded multiple coders. standardizes column names, filters excerpts preferred coder hierarchy, converts code columns logical (TRUE/FALSE), assigns descriptive variable labels, optionally exports cleaned data Excel (.xlsx) Stata (.dta) format. function also returns codebook containing variable names, labels, data types.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and prepare qualitative excerpts for export — clean_data","text":"","code":"clean_data(   excerpts,   preferred_coders,   rename_vars = NULL,   relabel_vars = NULL,   output_path = NULL,   output_type = c(\"none\", \"xlsx\", \"dta\") )"},{"path":"https://abiraahmi.github.io/DedooseR/reference/clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and prepare qualitative excerpts for export — clean_data","text":"excerpts data frame containing excerpt-level data exported Dedoose similar coding platform. preferred_coders character vector coder names order preference. function keeps highest-preference coder unique media_title. rename_vars optional named list dplyr::rename()-style mapping variables rename. example, list(new_name = \"old_name\"). relabel_vars optional named list new variable labels. example, list(old_name = \"New label var1\", var2 = \"Updated label var2\"). output_path Optional file path save cleaned dataset. NULL, data saved disk. output_type string specifying export format. Must one : \"none\" – file written (default) \"xlsx\" – save Excel file via openxlsx::write.xlsx() \"dta\" – save Stata file via haven::write_dta()","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and prepare qualitative excerpts for export — clean_data","text":"list two elements: data cleaned data frame standardized names, filtered coders, labelled variables. codebook data frame columns: variable, label, type.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/clean_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and prepare qualitative excerpts for export — clean_data","text":"function performs following steps: Standardizes variable names (lowercase, underscores instead spaces). Renames excerpt_copy excerpt present. Removes columns ending \"range\" \"weight\". Detects code columns matching pattern \"^code.*applied$\" converts logicals. Renames code columns c_ prefix assigns human-readable variable labels. Filters preferred coder per media_title. Applies default labels key metadata variables (e.g., excerpt_creator, media_title). Optionally renames relabels variables via user-supplied arguments. Drops columns entirely NA. Generates codebook summarizing variables, labels, types. exporting .dta, logicals remain stored TRUE/FALSE rather coerced 0/1. Variable labels preserved Stata format using labelled haven packages.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/clean_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and prepare qualitative excerpts for export — clean_data","text":"","code":"if (FALSE) { # \\dontrun{ result <- clean_data(   excerpts = excerpts_raw,   preferred_coders = c(\"CoderA\", \"CoderB\"),   rename_vars = list(new_name = \"old_name\"),   relabel_vars = list(old_name = \"new variable label\"),   output_path = \"cleaned_excerpts.dta\",   output_type = \"dta\" )  # Access cleaned data and codebook head(result$data) head(result$codebook) } # }"},{"path":"https://abiraahmi.github.io/DedooseR/reference/compare_saturation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Code Saturation Across Threshold Sets — compare_saturation","title":"Compare Code Saturation Across Threshold Sets — compare_saturation","text":"function compares code saturation results code summary table (typically generated create_code_summary()) one threshold sets define constitutes \"saturation\" based number excerpts (count) proportion media titles (prop_media_titles) code appears. Optionally, function can produce faceted bar plot showing codes meet set thresholds, metrics plotted counts, proportions, .","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/compare_saturation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Code Saturation Across Threshold Sets — compare_saturation","text":"","code":"compare_saturation(   code_summary,   thresholds_list,   output_type = c(\"tibble\", \"kable\"),   plot = FALSE,   plot_metric = c(\"count\", \"prop\", \"both\") )"},{"path":"https://abiraahmi.github.io/DedooseR/reference/compare_saturation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Code Saturation Across Threshold Sets — compare_saturation","text":"code_summary data frame tibble, typically produced create_code_summary(), containing columns: code, count, n_media_titles, prop_media_titles. thresholds_list named list threshold sets. element list numeric elements code_count prop_media_title. example: list(Liberal = list(code_count = 3, prop_media_title = 0.2),   Strict = list(code_count = 5, prop_media_title = 0.5)). output_type Character string specifying output type: either \"tibble\" (default) \"kable\" formatted table. plot Logical; TRUE, generates ggplot visualization codes meet threshold set. plot_metric Character string specifying metric plot: \"count\" — show excerpt frequencies . \"prop\" — show proportions media titles . \"\" — show metrics dual y-axes (counts bottom axis, proportions top axis).","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/compare_saturation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Code Saturation Across Threshold Sets — compare_saturation","text":"plot = FALSE, returns either tibble kable table results. plot = TRUE, returns list : results: tibble kable table logical columns indicating codes meet threshold set. plot: ggplot2 object visualizing saturation across threshold sets.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/compare_saturation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Code Saturation Across Threshold Sets — compare_saturation","text":"threshold set applied independently. code considered meet given threshold set excerpt count proportion media titles greater equal respective thresholds.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/compare_saturation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Code Saturation Across Threshold Sets — compare_saturation","text":"","code":"# Example data: excerpts with coded logical columns set.seed(123) excerpts <- data.frame(   media_title = rep(paste0(\"Interview_\", 1:5), each = 3),   code_A = sample(c(TRUE, FALSE), 15, replace = TRUE),   code_B = sample(c(TRUE, FALSE), 15, replace = TRUE),   code_C = sample(c(TRUE, FALSE), 15, replace = TRUE) )  # Create a code summary table (from your package function) code_summary <- create_code_summary(excerpts, output_type = \"tibble\") #> # A tibble: 3 × 4 #>   code   count n_media_titles prop_media_titles #>   <chr>  <int>          <int>             <dbl> #> 1 code_A     7              5                 1 #> 2 code_B    10              5                 1 #> 3 code_C     9              5                 1  # Define two saturation threshold sets thresholds_list <- list(   Liberal = list(code_count = 3, prop_media_title = 0.2),   Strict  = list(code_count = 5, prop_media_title = 0.5) )  # Compare saturation (table only) compare_saturation(code_summary, thresholds_list) #> # A tibble: 3 × 6 #>   code   count n_media_titles prop_media_titles Liberal Strict #>   <chr>  <int>          <int>             <dbl> <lgl>   <lgl>  #> 1 code_A     7              5                 1 TRUE    TRUE   #> 2 code_B    10              5                 1 TRUE    TRUE   #> 3 code_C     9              5                 1 TRUE    TRUE    # Compare and plot using proportions res <- compare_saturation(code_summary, thresholds_list, plot = TRUE, plot_metric = \"prop\") res$plot   # Compare and plot both metrics with dual y-axes res2 <- compare_saturation(code_summary, thresholds_list, plot = TRUE, plot_metric = \"both\") res2$plot"},{"path":"https://abiraahmi.github.io/DedooseR/reference/cooccur.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","title":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","text":"Builds co-occurrence matrix showing often qualitative codes appear together within unit (e.g., transcript, document, media title). function expects coded dataset (excerpts) returns formatted matrix (optionally) network visualization. returned matrix can displayed raw counts column-wise proportions, whereas network plot always reflects underlying raw counts.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/cooccur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","text":"","code":"cooccur(   excerpts = NULL,   min_bold = 10,   scale = c(\"count\", \"prop\"),   output = c(\"kable\", \"tibble\", \"data.frame\"),   plot = TRUE,   edge_min = 10,   layout = \"circle\",   edge_color_low = \"lightgray\",   edge_color_high = \"purple\",   node_color = \"lightblue\",   use_labels = FALSE,   codebook = NULL )"},{"path":"https://abiraahmi.github.io/DedooseR/reference/cooccur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","text":"excerpts Data frame containing coded excerpts, column named media_title code columns prefixed \"c_\". min_bold Minimum value bold highlighting HTML table output (output = \"kable\"). Default 10. scale Whether display raw counts (\"count\") column-wise conditional proportions (\"prop\") returned matrix. network plot always uses raw counts. Default \"count\". output format co-occurrence matrix output. One \"kable\", \"tibble\", \"data.frame\". Default \"kable\". plot Logical; whether produce network visualization. Default TRUE. edge_min Minimum edge weight (counts) displaying connections plot. Default 10. layout Graph layout network visualization (passed ggraph::ggraph). Common options include \"circle\", \"fr\", \"kk\". Default \"circle\". edge_color_low, edge_color_high Color gradient edge weights plot. Default \"lightgray\" \"purple\". node_color Color node points network plot. Default \"lightblue\". use_labels Logical; TRUE, replaces code variable names descriptive labels provided codebook. Default FALSE. codebook Optional data frame columns: variable: code variable name (e.g., \"c_family\") label: descriptive name code (e.g., \"Family Connectedness\"). Required use_labels = TRUE.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/cooccur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","text":"named list two elements: matrix tibble, data frame, formatted HTML table co-occurrence matrix. plot ggplot object visualizing co-occurrence network (plot = TRUE).","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/cooccur.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","text":"function identifies columns beginning \"c_\" code variables. computes co-occurrences summing pairwise intersections codes across unique media_title units. diagonal represents marginal frequencies (number transcripts code appears). resulting matrix can output tibble, simple data frame, formatted HTML table via knitr::kable. plot = TRUE, function also returns network visualization code co-occurrences using ggraph igraph. Edges filtered via edge_min threshold, nodes without remaining connections removed plot.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/cooccur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Code Co-occurrence Matrix and Network Plot — cooccur","text":"","code":"# Example 1: Basic co-occurrence matrix from excerpts df <- data.frame(   media_title = c(\"Doc1\", \"Doc2\", \"Doc3\"),   c_hope = c(1, 0, 1),   c_family = c(1, 1, 0),   c_school = c(0, 1, 1) )  result <- cooccur(   excerpts = df,   scale = \"count\",   output = \"tibble\",   plot = TRUE )  result$matrix  # Co-occurrence matrix #> # A tibble: 3 × 4 #>   code     c_hope c_family c_school #>   <chr>     <dbl>    <dbl>    <dbl> #> 1 c_hope        2        1        1 #> 2 c_family      1        2        1 #> 3 c_school      1        1        2 result$plot    # Network plot   # Example 2: Use descriptive labels from a codebook and proportions in the table codebook <- data.frame(   variable = c(\"c_hope\", \"c_family\", \"c_school\"),   label = c(\"Hope & Optimism\", \"Family Connectedness\", \"School Belonging\") )  labeled_result <- cooccur(   excerpts = df,   use_labels = TRUE,   codebook = codebook,   scale = \"prop\",   output = \"kable\",   plot = TRUE )  labeled_result$matrix #> <table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\"> #> <caption>Code Co-occurrence Matrix (Within Transcript) Proportions<\/caption> #>  <thead> #>   <tr> #>    <th style=\"text-align:left;\">   <\/th> #>    <th style=\"text-align:center;\"> Hope &amp; Optimism <\/th> #>    <th style=\"text-align:center;\"> Family Connectedness <\/th> #>    <th style=\"text-align:center;\"> School Belonging <\/th> #>   <\/tr> #>  <\/thead> #> <tbody> #>   <tr> #>    <td style=\"text-align:left;\"> Hope &amp; Optimism <\/td> #>    <td style=\"text-align:center;\"> 1.000 <\/td> #>    <td style=\"text-align:center;\"> 0.500 <\/td> #>    <td style=\"text-align:center;\"> 0.500 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> Family Connectedness <\/td> #>    <td style=\"text-align:center;\"> 0.500 <\/td> #>    <td style=\"text-align:center;\"> 1.000 <\/td> #>    <td style=\"text-align:center;\"> 0.500 <\/td> #>   <\/tr> #>   <tr> #>    <td style=\"text-align:left;\"> School Belonging <\/td> #>    <td style=\"text-align:center;\"> 0.500 <\/td> #>    <td style=\"text-align:center;\"> 0.500 <\/td> #>    <td style=\"text-align:center;\"> 1.000 <\/td> #>   <\/tr> #> <\/tbody> #> <\/table> labeled_result$plot"},{"path":"https://abiraahmi.github.io/DedooseR/reference/create_code_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","title":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","text":"Summarizes often qualitative code (represented logical 0/1 variables) appears across excerpts media titles. Optionally produces frequency table visualization code distributions. function automatically handles Stata-labelled (haven_labelled) numeric 0/1 variables converting logicals. can also pass custom codebook apply human-readable code labels.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/create_code_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","text":"","code":"create_code_summary(   excerpts,   table_min_count = 1,   table_min_prop = NULL,   plot = FALSE,   plot_min_count = NULL,   plot_min_prop = NULL,   output_type = c(\"tibble\", \"kable\", \"datatable\"),   exclude = NULL,   plot_metric = c(\"count\", \"prop\", \"both\"),   fill_color = \"steelblue\",   use_labels = FALSE,   codebook = NULL )"},{"path":"https://abiraahmi.github.io/DedooseR/reference/create_code_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","text":"excerpts data frame containing least one logical 0/1 variable representing code, column named media_title identifies source document excerpt. table_min_count Minimum number excerpts required code appear summary table. Default 1. table_min_prop Optional proportion threshold (relative maximum count) including codes table. Default NULL. plot Logical; whether generate plot visualizing code frequencies. Default FALSE. plot_min_count Minimum number excerpts required code appear plot. Defaults table_min_count. plot_min_prop Optional proportion threshold (relative maximum count) including codes plot. Defaults table_min_prop. output_type format output table. One \"tibble\", \"kable\", \"datatable\". Default \"tibble\". exclude Optional character vector variable names exclude analysis. plot_metric metric visualize. One \"count\", \"prop\", \"\". Default \"count\". fill_color Color plot bars. Default \"steelblue\". use_labels Logical; TRUE, uses supplied codebook display descriptive labels codes instead variable names. Default FALSE. codebook Optional data frame two columns: variable: variable names dataset label: corresponding human-readable label code. Required use_labels = TRUE.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/create_code_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","text":"plot = FALSE, returns table selected output_type format. plot = TRUE, invisibly returns list two elements: table table summarized code frequencies. plot ggplot object visualizing results.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/create_code_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","text":"function first identifies logical (0/1 numeric) columns excerpts calculates: count: total number excerpts code applied n_media_titles: number distinct media titles containing code prop_media_titles: proportion media titles containing code (relative max) table can output tibble, formatted table (knitr::kable), interactive data table (DT::datatable). plot = TRUE, function generates ggplot2 bar chart showing either code counts, proportions, (dual-axis view).","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/create_code_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Summary Table and Plot of Code Frequencies — create_code_summary","text":"","code":"# Example 1: Basic usage without a codebook df <- data.frame(   media_title = c(\"Doc1\", \"Doc2\", \"Doc3\", \"Doc4\"),   code_a = c(TRUE, FALSE, TRUE, TRUE),   code_b = c(FALSE, TRUE, TRUE, FALSE) )  create_code_summary(df, plot = TRUE) #> # A tibble: 2 × 4 #>   code   count n_media_titles prop_media_titles #>   <chr>  <int>          <int>             <dbl> #> 1 code_a     3              3              1    #> 2 code_b     2              2              0.67  # Example 2: Using a codebook for readable labels codebook <- data.frame(   variable = c(\"code_a\", \"code_b\"),   label = c(\"Community Engagement\", \"Policy Support\") )  create_code_summary(   df,   use_labels = TRUE,   codebook = codebook,   plot = TRUE,   plot_metric = \"both\" ) #> # A tibble: 2 × 4 #>   code                 count n_media_titles prop_media_titles #>   <chr>                <int>          <int>             <dbl> #> 1 Community Engagement     3              3              1    #> 2 Policy Support           2              2              0.67  # Example 3: Excluding a code and outputting as datatable create_code_summary(   df,   exclude = \"code_b\",   output_type = \"datatable\" )"},{"path":"https://abiraahmi.github.io/DedooseR/reference/recode.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode logical code variables and optionally relabel them — recode","title":"Recode logical code variables and optionally relabel them — recode","text":"Combines multiple logical (TRUE/FALSE) code variables new composite variables. new variable, function computes logical across specified source variables—meaning new variable TRUE source variable TRUE. Optionally, descriptive labels can supplied newly created variables, codebook summarizing resulting dataset returned.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/recode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode logical code variables and optionally relabel them — recode","text":"","code":"recode(data, recodes, relabel_vars = NULL)"},{"path":"https://abiraahmi.github.io/DedooseR/reference/recode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode logical code variables and optionally relabel them — recode","text":"data data frame tibble containing logical code variables (example, output clean_data()). recodes named list name new variable create value character vector existing variable names combine. example: list(c_help = c(\"c_support\", \"c_assist\"), c_stress = c(\"c_anxiety\", \"c_pressure\")) relabel_vars Optional named list variable labels new composite variables format list(new_var = \"New variable label\"). omitted, new variable names used default labels.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/recode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode logical code variables and optionally relabel them — recode","text":"list four elements: data_recode data frame containing updated dataset recoded logical code variables. codebook_recode data frame summarizing variable names, labels (available), data types. data_merged Alias data_recode retained backward compatibility. codebook_merged Alias codebook_recode retained backward compatibility.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/recode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode logical code variables and optionally relabel them — recode","text":"function first verifies specified source variables exist dataset. creates new logical variables defined recodes, assigns user-specified default labels, removes original source variables (unless one overlaps new variable name), builds codebook summarizing recoded dataset.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/recode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode logical code variables and optionally relabel them — recode","text":"","code":"# Example dataset df <- data.frame(   c_support = c(TRUE, FALSE, TRUE),   c_assist = c(FALSE, TRUE, TRUE),   c_anxiety = c(TRUE, FALSE, FALSE),   c_pressure = c(FALSE, TRUE, FALSE) )  # Define recodes recode_plan <- list(   c_help = c(\"c_support\", \"c_assist\"),   c_stress = c(\"c_anxiety\", \"c_pressure\") )  # Run recode() with new labels result <- recode(   data = df,   recodes = recode_plan,   relabel_vars = list(     c_help = \"Mentions of helping or supporting others\",     c_stress = \"Mentions of stress or pressure\"   ) )  # Extract recoded data and codebook data_recode <- result$data_recode codebook_recode <- result$codebook_recode  # View recoded dataset head(data_recode) #>   c_help c_stress #> 1   TRUE     TRUE #> 2   TRUE     TRUE #> 3   TRUE    FALSE  # View codebook head(codebook_recode) #>          variable                                    label    type #> c_help     c_help Mentions of helping or supporting others logical #> c_stress c_stress           Mentions of stress or pressure logical"},{"path":"https://abiraahmi.github.io/DedooseR/reference/set_saturation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and Visualize Code Saturation — set_saturation","title":"Compute and Visualize Code Saturation — set_saturation","text":"function summarizes code counts proportional representation across media titles (e.g., interviews, focus groups, qualitative data sources). can optionally produce formatted table /ggplot visualization showing saturation code frequency proportion.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/set_saturation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and Visualize Code Saturation — set_saturation","text":"","code":"set_saturation(   code_counts,   total_media_titles = NULL,   table_min_count = 1,   table_min_prop = NULL,   output_type = c(\"tibble\", \"kable\"),   plot = FALSE,   plot_min_count = NULL,   plot_min_prop = NULL,   plot_metric = c(\"prop\", \"count\", \"both\"),   fill_color = \"steelblue\" )"},{"path":"https://abiraahmi.github.io/DedooseR/reference/set_saturation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and Visualize Code Saturation — set_saturation","text":"code_counts tibble data frame containing columns: code: code label count: total number excerpts coded code n_media_titles: number distinct media titles (e.g., transcripts) code appears. object typically generated create_code_summary(). total_media_titles Optional numeric value indicating total number media titles. NULL (default), function uses maximum value n_media_titles. table_min_count Minimum count threshold including code output table. Defaults 1. table_min_prop Minimum proportion threshold (relative total media titles) including code output table. Defaults NULL (proportion filter). output_type Character string indicating output format table: either \"tibble\" (default) \"kable\". plot Logical; TRUE, produces ggplot visualization. Defaults FALSE. plot_min_count Minimum count threshold codes include plot. Defaults table_min_count NULL. plot_min_prop Minimum proportion threshold codes include plot. Defaults table_min_prop NULL. plot_metric Character string indicating plot: \"prop\" proportions, \"count\" counts, \"\" dual-axis plot. Defaults \"prop\". fill_color Character string specifying fill color bars plot. Defaults \"steelblue\".","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/set_saturation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and Visualize Code Saturation — set_saturation","text":"plot = FALSE: returns tibble (kable table) summarizing code frequencies proportions. plot = TRUE: returns list two elements: table: filtered tibble plot: ggplot2 object.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/set_saturation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and Visualize Code Saturation — set_saturation","text":"","code":"# Example dataset code_counts <- tibble::tibble(   code = c(\"Belonging\", \"Resilience\", \"Stress\", \"Hope\"),   count = c(15, 10, 8, 5),   n_media_titles = c(8, 6, 5, 3) )  # Basic usage (returns a tibble) set_saturation(code_counts) #> # A tibble: 4 × 3 #>   code       count prop_media_titles #>   <chr>      <dbl>             <dbl> #> 1 Belonging     15              1    #> 2 Resilience    10              0.75 #> 3 Stress         8              0.62 #> 4 Hope           5              0.38  # Apply count and proportion filters, return a kable table set_saturation(   code_counts,   total_media_titles = 10,   table_min_count = 5,   table_min_prop = 0.3,   output_type = \"kable\" ) #>  #>  #> Table: Code Counts with Transcript Proportions (table_min_count = 5 , table_min_prop = 0.3 ) #>  #> |code       | count| prop_media_titles| #> |:----------|-----:|-----------------:| #> |Belonging  |    15|               0.8| #> |Resilience |    10|               0.6| #> |Stress     |     8|               0.5| #> |Hope       |     5|               0.3|  # Generate a plot of proportions res <- set_saturation(   code_counts,   total_media_titles = 10,   plot = TRUE,   plot_metric = \"prop\" ) res$plot   # Plot both count and proportion using dual y-axes res <- set_saturation(   code_counts,   total_media_titles = 10,   plot = TRUE,   plot_metric = \"both\",   fill_color = \"darkgreen\" ) res$plot"},{"path":"https://abiraahmi.github.io/DedooseR/reference/view_excerpts.html","id":null,"dir":"Reference","previous_headings":"","what":"View Qualitative Excerpts by Code — view_excerpts","title":"View Qualitative Excerpts by Code — view_excerpts","text":"Displays qualitative excerpts interactively searchable, filterable data table. row represents excerpt associated one qualitative codes. Code columns automatically detected starting \"c_\", variable labels (available) used readable code names. function primarily designed exploring reviewing coded qualitative data, allowing users filter code quickly browse corresponding excerpts.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/view_excerpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View Qualitative Excerpts by Code — view_excerpts","text":"","code":"view_excerpts(data)"},{"path":"https://abiraahmi.github.io/DedooseR/reference/view_excerpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View Qualitative Excerpts by Code — view_excerpts","text":"data data frame containing least one text column named excerpt one logical code columns prefixed \"c_\". logical column represents whether code applied (TRUE/FALSE).","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/view_excerpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View Qualitative Excerpts by Code — view_excerpts","text":"DT::datatable() object displays: Code: readable code label variable name Excerpt: associated qualitative text output table includes: dropdown filter selecting specific codes Search boxes column-wise filtering Responsive column widths formatted text wrapping","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/view_excerpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View Qualitative Excerpts by Code — view_excerpts","text":"Variable labels extracted \"label\" attribute code column (e.g., assigned via haven::labelled attr(x, \"label\") <- \"Label\"). excerpts code marked TRUE displayed. table uses custom styling purple header automatic text wrapping.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/view_excerpts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View Qualitative Excerpts by Code — view_excerpts","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following object is masked from ‘package:DedooseR’: #>  #>     recode #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  df <- tibble::tibble(   excerpt = c(     \"I felt supported by my peers.\",     \"Teachers really listened to us.\",     \"I learned a lot about myself.\"   ),   c_support = c(TRUE, TRUE, FALSE),   c_growth = c(FALSE, FALSE, TRUE) ) attr(df$c_support, \"label\") <- \"Peer/Teacher Support\" attr(df$c_growth, \"label\") <- \"Personal Growth\"  # View excerpts interactively if (interactive()) view_excerpts(df)"},{"path":"https://abiraahmi.github.io/DedooseR/reference/wordcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a word cloud for excerpts by code — wordcloud","title":"Generate a word cloud for excerpts by code — wordcloud","text":"Creates word cloud words excerpts given code applied. Common English stop words, user-supplied stop words, punctuation removed.","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/wordcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a word cloud for excerpts by code — wordcloud","text":"","code":"wordcloud(data, code, max_words = 100, custom_stopwords = NULL)"},{"path":"https://abiraahmi.github.io/DedooseR/reference/wordcloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a word cloud for excerpts by code — wordcloud","text":"data data.frame tibble containing least one excerpt column one code columns starting \"c_\". code string giving name code column filter (e.g. \"c_belonging\"). max_words Maximum number words display word cloud (default = 100). custom_stopwords character vector additional stop words remove (default = NULL).","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/wordcloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a word cloud for excerpts by code — wordcloud","text":"interactive word cloud (wordcloud2).","code":""},{"path":"https://abiraahmi.github.io/DedooseR/reference/wordcloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a word cloud for excerpts by code — wordcloud","text":"","code":"library(dplyr) df <- tibble::tibble(   excerpt = c(     \"I felt connected to peers and friends.\",     \"We should normalize conversations about mental health.\",     \"My teachers helped me belong at school.\",     \"I am comfortable talking about suicide prevention.\"   ),   c_belonging = c(TRUE, FALSE, TRUE, FALSE),   c_destigmatization = c(FALSE, TRUE, FALSE, FALSE) )  # Word cloud for belonging excerpts wordcloud(df, \"c_belonging\")  {\"x\":{\"word\":[\"belong\",\"connected\",\"friends\",\"helped\",\"peers\",\"school\",\"teachers\"],\"freq\":[1,1,1,1,1,1,1],\"fontFamily\":\"Segoe UI\",\"fontWeight\":\"bold\",\"color\":\"random-dark\",\"minSize\":0,\"weightFactor\":180,\"backgroundColor\":\"white\",\"gridSize\":0,\"minRotation\":-0.7853981633974483,\"maxRotation\":0.7853981633974483,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}} # With custom stop words wordcloud(df, \"c_belonging\", custom_stopwords = c(\"connected\", \"school\"))  {\"x\":{\"word\":[\"belong\",\"friends\",\"helped\",\"peers\",\"teachers\"],\"freq\":[1,1,1,1,1],\"fontFamily\":\"Segoe UI\",\"fontWeight\":\"bold\",\"color\":\"random-dark\",\"minSize\":0,\"weightFactor\":180,\"backgroundColor\":\"white\",\"gridSize\":0,\"minRotation\":-0.7853981633974483,\"maxRotation\":0.7853981633974483,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}}"},{"path":"https://abiraahmi.github.io/DedooseR/news/index.html","id":"dedooser-006","dir":"Changelog","previous_headings":"","what":"DedooseR 0.0.6","title":"DedooseR 0.0.6","text":"2025-10-16: Added vignettes functions :)","code":""},{"path":"https://abiraahmi.github.io/DedooseR/news/index.html","id":"dedooser-005","dir":"Changelog","previous_headings":"","what":"DedooseR 0.0.5","title":"DedooseR 0.0.5","text":"2025-10-13: Renamed merge_codes() recode() better reflect function combines themes 2025-10-12: Test functions > 95%, package coverage 99.3% 🥳 2025-10-04: Adding tests functions just make extra sure ready y’! 2025-10-04: first 8 functions 🥳","code":""},{"path":"https://abiraahmi.github.io/DedooseR/news/index.html","id":"dedooser-004","dir":"Changelog","previous_headings":"","what":"DedooseR 0.0.4","title":"DedooseR 0.0.4","text":"2025-10-04: Pushed cooccur functions one 2025-10-04: Pushed plot_saturation set_saturation 2025-10-04: Pushed count_codes plot_counts one function: create_code_summary 2025-10-04: Updated existing functions output cleaned variable labels instead names 2025-10-03: Added topicmodel function select code populate topic distributions 2025-10-03: Added wordcloud function generate wordclouds chosen codes 2025-10-03: Added view_excerpts function create filterable excerpt viewer 2025-10-03: Added merge_codes function collapse codes others/new ones 2025-10-03: Added create_cooccur_matrix function allowing counts proportions tabled 2025-10-03: Added plot_compare_saturation function can visualize codes meet criteria thresholds set 2025-10-03: Added compare_saturation function can set saturation thresholds see codes meet 2025-10-03: Added plot_saturation function can visualize set_saturation 2025-10-03: Updated set_saturation function can set either code counts, transcript coverage ","code":""},{"path":"https://abiraahmi.github.io/DedooseR/news/index.html","id":"dedooser-003","dir":"Changelog","previous_headings":"","what":"DedooseR 0.0.3","title":"DedooseR 0.0.3","text":"2025-10-03: Updated plot_counts function can plot either code counts transcript coverage 2025-10-03: Updated count_codes function output transcript coverage","code":""},{"path":"https://abiraahmi.github.io/DedooseR/news/index.html","id":"dedooser-002","dir":"Changelog","previous_headings":"","what":"DedooseR 0.0.2","title":"DedooseR 0.0.2","text":"2025-10-02: Updated clean_data function include exportable codebook!","code":""},{"path":"https://abiraahmi.github.io/DedooseR/news/index.html","id":"dedooser-001","dir":"Changelog","previous_headings":"","what":"DedooseR 0.0.1","title":"DedooseR 0.0.1","text":"2025-08-05: Welcome DedooseR! Today, added first four functions - come soon ;)","code":""}]
